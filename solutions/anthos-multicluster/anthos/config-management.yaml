apiVersion: gkehub.cnrm.cloud.google.com/v1beta1
kind: GKEHubFeature
metadata:
  name: gke-config-management
  namespace: config-control
  annotations:
    cnrm.cloud.google.com/blueprint: 'kpt-fn'
spec:
  projectRef:
    external: my-awesome-project # kpt-set: ${project-id}
  location: global
  # The resourceID must be "configmanagement" if you want to use Anthos config
  # management feature.
  resourceID: configmanagement
---
apiVersion: gkehub.cnrm.cloud.google.com/v1beta1
kind: GKEHubFeatureMembership
metadata:
  name: anthos-config-management
  namespace: config-control
  annotations:
    cnrm.cloud.google.com/blueprint: 'kpt-fn'
    config.kubernetes.io/depends-on: sourcerepo.cnrm.cloud.google.com/namespaces/config-control/SourceRepoRepository/multi-cluster-ingress
spec:
  projectRef:
    external: my-awesome-project # kpt-set: ${project-id}
  location: global
  membershipRef:
    name: gke-ne1
  featureRef:
    name: gke-config-management
  configmanagement:
    version: 1.11.1
    configSync:
      sourceFormat: unstructured
      git:
        gcpServiceAccountRef:
          external: config-sync-sa@my-awesome-project.iam.gserviceaccount.com # kpt-set: config-sync-sa@${project-id}.iam.gserviceaccount.com
        secretType: gcpserviceaccount
        syncBranch: main
        syncRepo: https://source.developers.google.com/p/my-awesome-project/r/multi-cluster-ingress # kpt-set: https://source.developers.google.com/p/${project-id}/r/multi-cluster-ingress
    policyController:
      enabled: true
      referentialRulesEnabled: true
      logDeniesEnabled: true
      templateLibraryInstalled: true
      auditIntervalSeconds: "20"
    binauthz:
      enabled: true
    hierarchyController:
      enabled: false
      enablePodTreeLabels: false
      enableHierarchicalResourceQuota: false
---
apiVersion: gkehub.cnrm.cloud.google.com/v1beta1
kind: GKEHubFeatureMembership
metadata:
  name: anthos-config-management-2
  namespace: config-control
  annotations:
    cnrm.cloud.google.com/blueprint: 'kpt-fn'
    config.kubernetes.io/depends-on: sourcerepo.cnrm.cloud.google.com/namespaces/config-control/SourceRepoRepository/multi-cluster-ingress
spec:
  projectRef:
    external: my-awesome-project # kpt-set: ${project-id}
  location: global
  membershipRef:
    name: gke-ne2
  featureRef:
    name: gke-config-management
  configmanagement:
    version: 1.11.1
    configSync:
      sourceFormat: unstructured
      git:
        gcpServiceAccountRef:
          external: config-sync-sa@my-awesome-project.iam.gserviceaccount.com # kpt-set: config-sync-sa@${project-id}.iam.gserviceaccount.com
        secretType: gcpserviceaccount
        syncBranch: main
        syncRepo: https://source.developers.google.com/p/my-awesome-project/r/multi-cluster-ingress # kpt-set: https://source.developers.google.com/p/${project-id}/r/multi-cluster-ingress
    policyController:
      enabled: true
      referentialRulesEnabled: true
      logDeniesEnabled: true
      templateLibraryInstalled: true
      auditIntervalSeconds: "20"
    binauthz:
      enabled: true
    hierarchyController:
      enabled: false
      enablePodTreeLabels: false
      enableHierarchicalResourceQuota: false
